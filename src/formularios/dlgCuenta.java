/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import entidades.TipoMovimiento;
import datos.MovimientoDAO;
import entidades.Cliente;
import entidades.Empleado;
import entidades.Cuenta;
import entidades.Moneda;
import entidades.Sucursal;
import datos.Conexion;
import datos.CuentaDAO;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author BIGZERO
 */
public final class dlgCuenta extends javax.swing.JDialog {

    boolean reg;
    int pmod;
    private Connection cnn = null;
    Empleado empleado = new Empleado();
    Sucursal sucursal = new Sucursal();
    Cliente cliente = new Cliente();
    Moneda moneda = new Moneda();
    TipoMovimiento tipoMovimiento = new TipoMovimiento();
    String fecha;

    public dlgCuenta() throws SQLException {
        super(FrmPrincipal.getInstancia(), false);
        cnn = Conexion.getInstancia().miConexion();
        initComponents();
        setLocationRelativeTo(null);
        generarCodigoCuenta();
        controles(true);
        textos(false);
        lblTxt(false);
        empleado.llenarComboEmpleado(cboEmpleado);
        sucursal.llenarComboSucursal(cboSucursal);
        cliente.llenarComboCliente(cboCliente);
        moneda.llenarComboMoneda(cboMoneda);
        tipoMovimiento.llenarComboTipoMovimiento(cboTipoMovimiento);
        fecha = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
        txtFecha.setText(fecha);
    }

    void generarCodigoCuenta() throws SQLException {
        String serie = CuentaDAO.getInstancia().codigoCuenta();
        if (serie == null) {
            txtCodigo.setText("00001");
        } else {
            int increment = Integer.parseInt(serie);
            increment = increment + 1;
            if (txtCodigo.getText().compareTo("00009") == 0) {
                txtCodigo.setText("000" + increment);
            } else {
                txtCodigo.setText("00" + increment);
            }
        }
    }

    void limpiarTextos() {
        cboEstado.setSelectedIndex(0);
        txtSaldo.setText("");
        txtNumMovimientos.setText("");
        txtClave.setText("");

    }

    void controles(boolean sw) {
        btnNuevo.setEnabled(sw);
        btnRegistrar.setEnabled(!sw);
        btcancelar.setEnabled(!sw);
        btnBuscar.setEnabled(sw);
        btnlimpiar.setEnabled(!sw);
    }

    void textos(boolean sw) {
        txtClave.setEditable(sw);
        txtSaldo.setEditable(sw);
        txtOperacion.setEditable(sw);
    }

    void lblTxt(boolean sw) {
        lblMoneda.setVisible(sw);
        lblEmpleado.setVisible(sw);
        lblSucursal.setVisible(sw);
        lblCliente.setVisible(sw);
        txtCliente.setVisible(sw);
        txtSucursal.setVisible(sw);
        txtEmpleado.setVisible(sw);
        txtMoneda.setVisible(sw);
        lblMoneda1.setVisible(!sw);
        lblEmpleado1.setVisible(!sw);
        lblSucursal1.setVisible(!sw);
        lblCliente1.setVisible(!sw);
        cboCliente.setVisible(!sw);
        cboEmpleado.setVisible(!sw);
        cboSucursal.setVisible(!sw);
        cboMoneda.setVisible(!sw);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cboEmpleado = new javax.swing.JComboBox<>();
        lblEmpleado1 = new javax.swing.JLabel();
        cboSucursal = new javax.swing.JComboBox<>();
        lblSucursal1 = new javax.swing.JLabel();
        lblCliente1 = new javax.swing.JLabel();
        cboCliente = new javax.swing.JComboBox<>();
        btnRegistrar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnlimpiar = new javax.swing.JButton();
        btcancelar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        lblMoneda1 = new javax.swing.JLabel();
        cboMoneda = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtSaldo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtNumMovimientos = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cboEstado = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        txtClave = new javax.swing.JPasswordField();
        jLabel11 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        lblSucursal = new javax.swing.JLabel();
        txtSucursal = new javax.swing.JTextField();
        lblCliente = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        lblEmpleado = new javax.swing.JLabel();
        txtEmpleado = new javax.swing.JTextField();
        lblMoneda = new javax.swing.JLabel();
        txtMoneda = new javax.swing.JTextField();
        btnSalir1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cboTipoMovimiento = new javax.swing.JComboBox<>();
        txtOperacion = new javax.swing.JTextField();
        lblOperacion = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txtCodigo.setEditable(false);

        jLabel2.setText("Codigo");

        lblEmpleado1.setText("Empleado");

        lblSucursal1.setText("Sucursal");

        lblCliente1.setText("Cliente");

        btnRegistrar.setText("Registrar");
        btnRegistrar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRegistrar.setContentAreaFilled(false);
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnNuevo.setContentAreaFilled(false);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnlimpiar.setText("Limpiar");
        btnlimpiar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnlimpiar.setContentAreaFilled(false);
        btnlimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlimpiarActionPerformed(evt);
            }
        });

        btcancelar.setText("Cancelar");
        btcancelar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btcancelar.setContentAreaFilled(false);
        btcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btcancelarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBuscar.setContentAreaFilled(false);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        lblMoneda1.setText("Moneda");

        jLabel7.setText("Saldo");

        txtSaldo.setEditable(false);

        jLabel8.setText("<html>Numero de Movimientos</html>");

        txtNumMovimientos.setEditable(false);

        jLabel9.setText("Estado");

        cboEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ACTIVO", "ANULADO", "CANCELADO" }));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Clave");

        jLabel11.setText("Fecha");

        txtFecha.setEditable(false);

        lblSucursal.setText("Sucursal");

        txtSucursal.setEditable(false);

        lblCliente.setText("Cliente");

        txtCliente.setEditable(false);

        lblEmpleado.setText("Empleado");

        txtEmpleado.setEditable(false);

        lblMoneda.setText("Moneda");

        txtMoneda.setEditable(false);

        btnSalir1.setText("Salir");
        btnSalir1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSalir1.setContentAreaFilled(false);
        btnSalir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalir1ActionPerformed(evt);
            }
        });

        jLabel1.setText("<html>Tipo de Movimiento</html>");

        cboTipoMovimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTipoMovimientoActionPerformed(evt);
            }
        });

        lblOperacion.setText("Operacion");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("OPERACIONES BANCARIAS");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(cboTipoMovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(556, 556, 556)
                        .addComponent(jLabel11)
                        .addGap(5, 5, 5)
                        .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2)
                        .addGap(5, 5, 5)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(lblSucursal1)
                        .addGap(5, 5, 5)
                        .addComponent(cboSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblCliente1)
                        .addGap(18, 18, 18)
                        .addComponent(cboCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(lblEmpleado1)
                        .addGap(5, 5, 5)
                        .addComponent(cboEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(22, 22, 22)
                        .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(txtNumMovimientos, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel9)
                        .addGap(5, 5, 5)
                        .addComponent(cboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(lblMoneda1)
                        .addGap(5, 5, 5)
                        .addComponent(cboMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMoneda)
                        .addGap(14, 14, 14)
                        .addComponent(txtMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblSucursal)
                        .addGap(42, 42, 42)
                        .addComponent(txtSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(lblCliente)
                        .addGap(5, 5, 5)
                        .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(lblEmpleado)
                        .addGap(5, 5, 5)
                        .addComponent(txtEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblOperacion)
                        .addGap(5, 5, 5)
                        .addComponent(txtOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(172, 172, 172)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(btnlimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(btcancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(btnSalir1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(404, 404, 404)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cboTipoMovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel11))
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(lblSucursal1))
                    .addComponent(cboSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(lblCliente1))
                    .addComponent(cboCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(lblEmpleado1))
                    .addComponent(cboEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumMovimientos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel9))
                    .addComponent(cboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(lblMoneda1))
                    .addComponent(cboMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(lblMoneda))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(txtMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(lblSucursal))
                    .addComponent(txtSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(lblCliente))
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(lblEmpleado))
                    .addComponent(txtEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(lblOperacion))
                    .addComponent(txtOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel10))
                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnlimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btcancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalir1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
        String codigoCuenta, codigoMoneda, codigoSucursal, codigoEmpleado,
                codigoCliente, codigoTipoMovimiento, clave, estado;
        float saldo;
        int numMovimiento;
        int monto = 0;
        if (txtSaldo.getText().compareTo("") != 0) {
            try {

                codigoCuenta = txtCodigo.getText();
                codigoMoneda = cboMoneda.getItemAt(cboMoneda.getSelectedIndex()).getMonecodigo();
                codigoSucursal = cboSucursal.getItemAt(cboSucursal.getSelectedIndex()).getSucucodigo();
                codigoEmpleado = cboEmpleado.getItemAt(cboEmpleado.getSelectedIndex()).getEmplcodigo();
                codigoCliente = cboCliente.getItemAt(cboCliente.getSelectedIndex()).getCliecodigo();
                codigoTipoMovimiento = cboTipoMovimiento.getItemAt(cboTipoMovimiento.getSelectedIndex()).getTipocodigo();
                saldo = Float.parseFloat(txtSaldo.getText());
                estado = (String) cboEstado.getSelectedItem();
                numMovimiento = Integer.parseInt(txtNumMovimientos.getText());
                clave = txtClave.getText();
                monto = Integer.parseInt(txtOperacion.getText());
                
                if (codigoTipoMovimiento.equalsIgnoreCase("003")) {
                    if (txtMoneda.getText().equalsIgnoreCase("01")) {
                        if (numMovimiento <= 15) {
                            saldo = saldo + monto;
                        } else {
                            saldo = saldo + monto - 2;
                        }

                    } else {
                        if (numMovimiento <= 15) {
                            saldo = (float) (saldo + monto);
                        } else {
                            saldo = (float) (saldo + monto - 0.6);
                        }
                    }
                } else if (codigoTipoMovimiento.equalsIgnoreCase("004")) {
                    if (txtMoneda.getText().equalsIgnoreCase("01")) {
                        if (numMovimiento <= 15) {
                            saldo = saldo - monto;
                        } else {
                            saldo = saldo - monto - 2;
                        }

                    } else {
                        if (numMovimiento <= 15) {
                            saldo = (float) (saldo - monto);
                        } else {
                            saldo = (float) (saldo - monto - 0.6);
                        }
                    }
                }
                if (reg) {
                    try {

                        CuentaDAO.getInstancia().insertar(codigoCuenta, codigoMoneda, codigoSucursal,
                                codigoEmpleado, codigoCliente, saldo, fecha, estado, numMovimiento, clave);
                        JOptionPane.showMessageDialog(null, "Cuenta Aperturada");
                        generarCodigoCuenta();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, ex.getMessage());
                    }

                } else {
                    try {
                        numMovimiento += 1;
                        CuentaDAO.getInstancia().actualizar(codigoCuenta, codigoMoneda, codigoSucursal,
                                codigoEmpleado, codigoCliente, saldo, fecha, estado, numMovimiento, clave);
                        MovimientoDAO.getInstancia().insertar(codigoCuenta, numMovimiento, fecha, codigoEmpleado, codigoTipoMovimiento, monto, null);
                        JOptionPane.showMessageDialog(null, "Operación realizada con EXITO!!");
                        generarCodigoCuenta();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, ex.getMessage());
                    }

                }
                generarCodigoCuenta();
                limpiarTextos();
                controles(true);
                textos(false);

            } catch (SQLException ex) {
                Logger.getLogger(dlgEmpleado.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "faltan llenar datos");
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        reg = true;
        controles(false);
        textos(true);
        lblTxt(false);
        limpiarTextos();
        txtNumMovimientos.setEditable(false);
        txtNumMovimientos.setText("0");
        txtSaldo.requestFocus();

    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnlimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlimpiarActionPerformed
        // TODO add your handling code here:
        limpiarTextos();
        txtSaldo.requestFocus();
    }//GEN-LAST:event_btnlimpiarActionPerformed

    private void btcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btcancelarActionPerformed
        try {
            // TODO add your handling code here:
            limpiarTextos();
            textos(false);
            controles(true);
            lblTxt(false);
            generarCodigoCuenta();
            lblOperacion.setText("Operacion");
        } catch (SQLException ex) {
            Logger.getLogger(dlgCuenta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btcancelarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        String cuenta;
        limpiarTextos();
        cuenta = JOptionPane.showInputDialog("Ingrese el codigo de la cuenta a buscar : ");
        Cuenta x;
        try {
            x = CuentaDAO.getInstancia().buscarCuenta(cuenta);
            if (x != null) {
                lblTxt(true);
                txtCodigo.setText(x.getCuencodigo());
                x.setCuenestado((String) cboEstado.getSelectedItem());
                txtSaldo.setText(String.valueOf(x.getCuensaldo()));
                txtNumMovimientos.setText(String.valueOf(x.getCuencontmov()));
                txtClave.setText(x.getCuenclave());
                txtSucursal.setText(x.getSucucodigo());
                txtCliente.setText(x.getCliecodigo());
                txtEmpleado.setText(x.getEmplcreacuenta());
                txtMoneda.setText(x.getMonecodigo());

            } else {
                JOptionPane.showMessageDialog(null, "El codigo no existe");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnSalir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalir1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnSalir1ActionPerformed

    private void cboTipoMovimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTipoMovimientoActionPerformed
        // TODO add your handling code here:
        String codigoTipoMovimiento = cboTipoMovimiento.getItemAt(cboTipoMovimiento.getSelectedIndex()).getTipocodigo();
        if (codigoTipoMovimiento.equalsIgnoreCase("001")) {
            btnRegistrar.setText("Aperturar");
        } else if (codigoTipoMovimiento.equalsIgnoreCase("002")) {
            btnRegistrar.setText("Cancelar");
            String codigo;
            limpiarTextos();
            codigo = JOptionPane.showInputDialog("Ingrese el codigo de la cuenta a cancelar : ");
            Cuenta x;
            try {
                x = CuentaDAO.getInstancia().buscarCuenta(codigo);
                if (x != null) {
                    lblTxt(true);
                    txtCodigo.setText(x.getCuencodigo());
                    txtSaldo.setText(String.valueOf(x.getCuensaldo()));
                    txtNumMovimientos.setText(String.valueOf(x.getCuencontmov()));
                    txtClave.setText(x.getCuenclave());
                    txtSucursal.setText(x.getSucucodigo());
                    txtCliente.setText(x.getCliecodigo());
                    txtEmpleado.setText(x.getEmplcreacuenta());
                    txtMoneda.setText(x.getMonecodigo());
                    x.setCuenestado((String) cboEstado.getSelectedItem());
                    reg = false;
                    controles(false);
                    textos(true);
                    txtClave.setEditable(false);
                } else {
                    JOptionPane.showMessageDialog(null, "El codigo Asignado no existe");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        } else if (codigoTipoMovimiento.equalsIgnoreCase("003")) {
            btnRegistrar.setText("Depositar");
            lblOperacion.setText("Deposito");
            String codigo;
            limpiarTextos();
            codigo = JOptionPane.showInputDialog("Ingrese el codigo de la cuenta a modificar : ");
            Cuenta x;
            try {
                x = CuentaDAO.getInstancia().buscarCuenta(codigo);
                if (x != null) {
                    lblTxt(true);
                    txtCodigo.setText(x.getCuencodigo());
                    txtSaldo.setText(String.valueOf(x.getCuensaldo()));
                    txtNumMovimientos.setText(String.valueOf(x.getCuencontmov()));
                    txtClave.setText(x.getCuenclave());
                    txtSucursal.setText(x.getSucucodigo());
                    txtCliente.setText(x.getCliecodigo());
                    txtEmpleado.setText(x.getEmplcreacuenta());
                    txtMoneda.setText(x.getMonecodigo());
                    x.setCuenestado((String) cboEstado.getSelectedItem());
                    reg = false;
                    controles(false);
                    textos(true);
                    txtClave.setEditable(false);
                } else {
                    JOptionPane.showMessageDialog(null, "El codigo Asignado no existe");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        } else if (codigoTipoMovimiento.equalsIgnoreCase("004")) {
            btnRegistrar.setText("Retirar");
            lblOperacion.setText("Retiro");
            String codigo;
            limpiarTextos();
            codigo = JOptionPane.showInputDialog("Ingrese el codigo de la cuenta a modificar : ");
            Cuenta x;
            try {
                x = CuentaDAO.getInstancia().buscarCuenta(codigo);
                if (x != null) {
                    lblTxt(true);
                    txtCodigo.setText(x.getCuencodigo());
                    txtSaldo.setText(String.valueOf(x.getCuensaldo()));
                    txtNumMovimientos.setText(String.valueOf(x.getCuencontmov()));
                    txtClave.setText(x.getCuenclave());
                    txtSucursal.setText(x.getSucucodigo());
                    txtCliente.setText(x.getCliecodigo());
                    txtEmpleado.setText(x.getEmplcreacuenta());
                    txtMoneda.setText(x.getMonecodigo());
                    x.setCuenestado((String) cboEstado.getSelectedItem());
                    reg = false;
                    controles(false);
                    textos(true);
                    txtClave.setEditable(false);
                } else {
                    JOptionPane.showMessageDialog(null, "El codigo Asignado no existe");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        } else if (codigoTipoMovimiento.equalsIgnoreCase("005")) {
            btnRegistrar.setText("Cobrar Intereses");
            String codigo;
            limpiarTextos();
            codigo = JOptionPane.showInputDialog("Ingrese el codigo de la cuenta a modificar : ");
            Cuenta x;
            try {
                x = CuentaDAO.getInstancia().buscarCuenta(codigo);
                if (x != null) {
                    lblTxt(true);
                    txtCodigo.setText(x.getCuencodigo());
                    txtSaldo.setText(String.valueOf(x.getCuensaldo()));
                    txtNumMovimientos.setText(String.valueOf(x.getCuencontmov()));
                    txtClave.setText(x.getCuenclave());
                    txtSucursal.setText(x.getSucucodigo());
                    txtCliente.setText(x.getCliecodigo());
                    txtEmpleado.setText(x.getEmplcreacuenta());
                    txtMoneda.setText(x.getMonecodigo());
                    x.setCuenestado((String) cboEstado.getSelectedItem());
                    reg = false;
                    controles(false);
                    textos(true);
                } else {
                    JOptionPane.showMessageDialog(null, "El codigo Asignado no existe");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        } else if (codigoTipoMovimiento.equalsIgnoreCase("006")) {
            btnRegistrar.setText("Cobrar Mantenimiento");
        } else if (codigoTipoMovimiento.equalsIgnoreCase("007")) {
            btnRegistrar.setText("ITF");
        } else if (codigoTipoMovimiento.equalsIgnoreCase("008")) {
            btnRegistrar.setText("Transferencia");
        } else if (codigoTipoMovimiento.equalsIgnoreCase("009")) {
            btnRegistrar.setText("Transferencia");
        } else {
            btnRegistrar.setText("Cargo Mantenimiento");
        }
    }//GEN-LAST:event_cboTipoMovimientoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btcancelar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnSalir1;
    private javax.swing.JButton btnlimpiar;
    private javax.swing.JComboBox<Cliente> cboCliente;
    private javax.swing.JComboBox<Empleado> cboEmpleado;
    private javax.swing.JComboBox<String> cboEstado;
    private javax.swing.JComboBox<Moneda> cboMoneda;
    private javax.swing.JComboBox<Sucursal> cboSucursal;
    private javax.swing.JComboBox<TipoMovimiento> cboTipoMovimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JLabel lblCliente1;
    private javax.swing.JLabel lblEmpleado;
    private javax.swing.JLabel lblEmpleado1;
    private javax.swing.JLabel lblMoneda;
    private javax.swing.JLabel lblMoneda1;
    private javax.swing.JLabel lblOperacion;
    private javax.swing.JLabel lblSucursal;
    private javax.swing.JLabel lblSucursal1;
    private javax.swing.JPasswordField txtClave;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtEmpleado;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtMoneda;
    private javax.swing.JTextField txtNumMovimientos;
    private javax.swing.JTextField txtOperacion;
    private javax.swing.JTextField txtSaldo;
    private javax.swing.JTextField txtSucursal;
    // End of variables declaration//GEN-END:variables
}
