/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import datos.ClienteDAO;
import entidades.Cliente;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author BIGZERO
 */
public class dlgReporteClientes extends javax.swing.JDialog {

    /**
     * Creates new form dlgReporteClientes
     */
    
    boolean reg;
    int pmod;
    private Connection cnn = null;
    DefaultTableModel modelo = new DefaultTableModel();
    String nombreColumnas[]={"Código","Apellidos","Nombres","DNI","Ciudad","Dirección","Telefono","Email"};
    public dlgReporteClientes() {
        super(FrmPrincipal.getInstancia(),false);
        cnn = Conexion.getInstancia().miConexion();
        initComponents();
        setLocationRelativeTo(null);
        modelo.setColumnIdentifiers(nombreColumnas);
        try {
            ArrayList<Cliente> lista = ClienteDAO.getInstancia().mostrarClientes();
            Object [][]datos=new Object[lista.size()][9];
            for (int i = 0; i < lista.size(); i++) {
                Cliente x = lista.get(i);
                datos[i][0]=x.getCliecodigo();
                datos[i][1]=x.getCliepaterno()+ " " + x.getCliematerno();
                datos[i][2]=x.getClienombre();
                datos[i][3]=x.getCliedni();
                datos[i][4]=x.getClieciudad();
                datos[i][5]=x.getCliedireccion();
                datos[i][6]=x.getClietelefono();
                datos[i][7]=x.getClieemail();
            }
            modelo.setDataVector(datos, nombreColumnas);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        };
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btnCerrar = new javax.swing.JButton();
        btnDNI = new javax.swing.JButton();
        btnApellidos = new javax.swing.JButton();
        btnDefecto = new javax.swing.JButton();
        lblOrden = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("    Lista de Clientes");

        tabla.setModel(modelo);
        jScrollPane1.setViewportView(tabla);

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        btnDNI.setText("Ordenar por DNI");
        btnDNI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDNIActionPerformed(evt);
            }
        });

        btnApellidos.setText("Ordenar por Apellidos");
        btnApellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApellidosActionPerformed(evt);
            }
        });

        btnDefecto.setText("Ordenar por Defecto");
        btnDefecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDefectoActionPerformed(evt);
            }
        });

        lblOrden.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblOrden.setText("Ordenado por Defecto");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(btnDNI)
                .addGap(183, 183, 183)
                .addComponent(btnDefecto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 168, Short.MAX_VALUE)
                .addComponent(btnApellidos)
                .addGap(87, 87, 87))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCerrar)
                .addGap(410, 410, 410))
            .addGroup(layout.createSequentialGroup()
                .addGap(331, 331, 331)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblOrden, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblOrden)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDNI)
                    .addComponent(btnApellidos)
                    .addComponent(btnDefecto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCerrar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnDNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDNIActionPerformed
        // TODO add your handling code here:
        try {
            ArrayList<Cliente> lista = ClienteDAO.getInstancia().mostrarClientesDNI();
            Object [][]datos=new Object[lista.size()][9];
            for (int i = 0; i < lista.size(); i++) {
                Cliente x = lista.get(i);
                datos[i][0]=x.getCliecodigo();
                datos[i][1]=x.getCliepaterno()+ " " + x.getCliematerno();
                datos[i][2]=x.getClienombre();
                datos[i][3]=x.getCliedni();
                datos[i][4]=x.getClieciudad();
                datos[i][5]=x.getCliedireccion();
                datos[i][6]=x.getClietelefono();
                datos[i][7]=x.getClieemail();
            }
            modelo.setDataVector(datos, nombreColumnas);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        };
        lblOrden.setText("Ordenado por DNI");
    }//GEN-LAST:event_btnDNIActionPerformed

    private void btnApellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApellidosActionPerformed
        // TODO add your handling code here:
        try {
            ArrayList<Cliente> lista = ClienteDAO.getInstancia().mostrarClientesApellidos();
            Object [][]datos=new Object[lista.size()][9];
            for (int i = 0; i < lista.size(); i++) {
                Cliente x = lista.get(i);
                datos[i][0]=x.getCliecodigo();
                datos[i][1]=x.getCliepaterno()+ " " + x.getCliematerno();
                datos[i][2]=x.getClienombre();
                datos[i][3]=x.getCliedni();
                datos[i][4]=x.getClieciudad();
                datos[i][5]=x.getCliedireccion();
                datos[i][6]=x.getClietelefono();
                datos[i][7]=x.getClieemail();
            }
            modelo.setDataVector(datos, nombreColumnas);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        };
        lblOrden.setText("Ordenado por Apellidos");
    }//GEN-LAST:event_btnApellidosActionPerformed

    private void btnDefectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDefectoActionPerformed
        // TODO add your handling code here:
        try {
            ArrayList<Cliente> lista = ClienteDAO.getInstancia().mostrarClientes();
            Object [][]datos=new Object[lista.size()][9];
            for (int i = 0; i < lista.size(); i++) {
                Cliente x = lista.get(i);
                datos[i][0]=x.getCliecodigo();
                datos[i][1]=x.getCliepaterno()+ " " + x.getCliematerno();
                datos[i][2]=x.getClienombre();
                datos[i][3]=x.getCliedni();
                datos[i][4]=x.getClieciudad();
                datos[i][5]=x.getCliedireccion();
                datos[i][6]=x.getClietelefono();
                datos[i][7]=x.getClieemail();
            }
            modelo.setDataVector(datos, nombreColumnas);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        };
        lblOrden.setText("Ordenado por Defecto");
    }//GEN-LAST:event_btnDefectoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApellidos;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnDNI;
    private javax.swing.JButton btnDefecto;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblOrden;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
